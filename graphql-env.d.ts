/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: {
    'Duration': unknown;
    'Time': unknown;
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'healthCheck': { name: 'healthCheck'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'numberUsers': { name: 'numberUsers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'jsonStorage': { name: 'jsonStorage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'configFlatDesc': { name: 'configFlatDesc'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ConfigFlatDesc'; ofType: null; }; }; }; } }; 'configs': { name: 'configs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Config'; ofType: null; }; }; }; } }; 'dnss': { name: 'dnss'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Dns'; ofType: null; }; }; }; } }; 'routings': { name: 'routings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Routing'; ofType: null; }; }; }; } }; 'parsedRouting': { name: 'parsedRouting'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DaeRouting'; ofType: null; }; } }; 'parsedDns': { name: 'parsedDns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DaeDns'; ofType: null; }; } }; 'subscriptions': { name: 'subscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Subscription'; ofType: null; }; }; }; } }; 'groups': { name: 'groups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; }; }; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NodesConnection'; ofType: null; }; } }; 'general': { name: 'general'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'General'; ofType: null; }; } }; }; };
    'Int': unknown;
    'String': unknown;
    'ID': unknown;
    'Boolean': unknown;
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'createUser': { name: 'createUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createConfig': { name: 'createConfig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Config'; ofType: null; }; } }; 'createDns': { name: 'createDns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Dns'; ofType: null; }; } }; 'createRouting': { name: 'createRouting'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Routing'; ofType: null; }; } }; 'setJsonStorage': { name: 'setJsonStorage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'removeJsonStorage': { name: 'removeJsonStorage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updateAvatar': { name: 'updateAvatar'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updateName': { name: 'updateName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updateUsername': { name: 'updateUsername'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updatePassword': { name: 'updatePassword'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updateConfig': { name: 'updateConfig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Config'; ofType: null; }; } }; 'updateDns': { name: 'updateDns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Dns'; ofType: null; }; } }; 'updateRouting': { name: 'updateRouting'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Routing'; ofType: null; }; } }; 'renameConfig': { name: 'renameConfig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'renameDns': { name: 'renameDns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'renameRouting': { name: 'renameRouting'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'removeConfig': { name: 'removeConfig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'removeDns': { name: 'removeDns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'removeRouting': { name: 'removeRouting'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'selectConfig': { name: 'selectConfig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'selectDns': { name: 'selectDns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'selectRouting': { name: 'selectRouting'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'run': { name: 'run'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'importNodes': { name: 'importNodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NodeImportResult'; ofType: null; }; }; }; } }; 'updateNode': { name: 'updateNode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Node'; ofType: null; }; } }; 'removeNodes': { name: 'removeNodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'tagNode': { name: 'tagNode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'importSubscription': { name: 'importSubscription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionImportResult'; ofType: null; }; } }; 'removeSubscriptions': { name: 'removeSubscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'tagSubscription': { name: 'tagSubscription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updateSubscription': { name: 'updateSubscription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Subscription'; ofType: null; }; } }; 'createGroup': { name: 'createGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; 'groupSetPolicy': { name: 'groupSetPolicy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'groupAddSubscriptions': { name: 'groupAddSubscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'groupDelSubscriptions': { name: 'groupDelSubscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'groupAddNodes': { name: 'groupAddNodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'groupDelNodes': { name: 'groupDelNodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'renameGroup': { name: 'renameGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'removeGroup': { name: 'removeGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'Role': { kind: 'ENUM'; name: 'Role'; type: 'admin'; };
    'ImportArgument': { kind: 'INPUT_OBJECT'; name: 'ImportArgument'; inputFields: [{ name: 'link'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'tag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'NodeImportResult': { kind: 'OBJECT'; name: 'NodeImportResult'; fields: { 'link': { name: 'link'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'error': { name: 'error'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Node'; ofType: null; } }; }; };
    'SubscriptionImportResult': { kind: 'OBJECT'; name: 'SubscriptionImportResult'; fields: { 'link': { name: 'link'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeImportResult': { name: 'nodeImportResult'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NodeImportResult'; ofType: null; }; }; }; } }; 'sub': { name: 'sub'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Subscription'; ofType: null; }; } }; }; };
    'PolicyParam': { kind: 'INPUT_OBJECT'; name: 'PolicyParam'; inputFields: [{ name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'val'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ConfigFlatDesc': { kind: 'OBJECT'; name: 'ConfigFlatDesc'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'mapping': { name: 'mapping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isArray': { name: 'isArray'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'defaultValue': { name: 'defaultValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'required': { name: 'required'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'desc': { name: 'desc'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'General': { kind: 'OBJECT'; name: 'General'; fields: { 'dae': { name: 'dae'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Dae'; ofType: null; }; } }; 'interfaces': { name: 'interfaces'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Interface'; ofType: null; }; }; }; } }; 'schema': { name: 'schema'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Dae': { kind: 'OBJECT'; name: 'Dae'; fields: { 'running': { name: 'running'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'modified': { name: 'modified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Interface': { kind: 'OBJECT'; name: 'Interface'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'flag': { name: 'flag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InterfaceFlag'; ofType: null; }; } }; 'ifindex': { name: 'ifindex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'ip': { name: 'ip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'InterfaceFlag': { kind: 'OBJECT'; name: 'InterfaceFlag'; fields: { 'up': { name: 'up'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'default': { name: 'default'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DefaultRoute'; ofType: null; }; }; } }; }; };
    'DefaultRoute': { kind: 'OBJECT'; name: 'DefaultRoute'; fields: { 'ipVersion': { name: 'ipVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gateway': { name: 'gateway'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'source': { name: 'source'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Config': { kind: 'OBJECT'; name: 'Config'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'global': { name: 'global'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Global'; ofType: null; }; } }; 'selected': { name: 'selected'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'Global': { kind: 'OBJECT'; name: 'Global'; fields: { 'tproxyPort': { name: 'tproxyPort'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'tproxyPortProtect': { name: 'tproxyPortProtect'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'soMarkFromDae': { name: 'soMarkFromDae'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'logLevel': { name: 'logLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tcpCheckUrl': { name: 'tcpCheckUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'tcpCheckHttpMethod': { name: 'tcpCheckHttpMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'udpCheckDns': { name: 'udpCheckDns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'checkInterval': { name: 'checkInterval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Duration'; ofType: null; }; } }; 'checkTolerance': { name: 'checkTolerance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Duration'; ofType: null; }; } }; 'lanInterface': { name: 'lanInterface'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'wanInterface': { name: 'wanInterface'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'allowInsecure': { name: 'allowInsecure'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'dialMode': { name: 'dialMode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'disableWaitingNetwork': { name: 'disableWaitingNetwork'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'autoConfigKernelParameter': { name: 'autoConfigKernelParameter'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'autoConfigFirewallRule': { name: 'autoConfigFirewallRule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sniffingTimeout': { name: 'sniffingTimeout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Duration'; ofType: null; }; } }; 'tlsImplementation': { name: 'tlsImplementation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'utlsImitate': { name: 'utlsImitate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'globalInput': { kind: 'INPUT_OBJECT'; name: 'globalInput'; inputFields: [{ name: 'tproxyPort'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'tproxyPortProtect'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'soMarkFromDae'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'logLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tcpCheckUrl'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'tcpCheckHttpMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'udpCheckDns'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'checkInterval'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; }; defaultValue: null }, { name: 'checkTolerance'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; }; defaultValue: null }, { name: 'lanInterface'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'wanInterface'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'allowInsecure'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'dialMode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'disableWaitingNetwork'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'autoConfigKernelParameter'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'autoConfigFirewallRule'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'sniffingTimeout'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; }; defaultValue: null }, { name: 'tlsImplementation'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'utlsImitate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Group': { kind: 'OBJECT'; name: 'Group'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Node'; ofType: null; }; }; }; } }; 'subscriptions': { name: 'subscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Subscription'; ofType: null; }; }; }; } }; 'policy': { name: 'policy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'Policy'; ofType: null; }; } }; 'policyParams': { name: 'policyParams'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Param'; ofType: null; }; }; }; } }; }; };
    'Policy': { kind: 'ENUM'; name: 'Policy'; type: 'random' | 'fixed' | 'min_avg10' | 'min_moving_avg' | 'min'; };
    'Routing': { kind: 'OBJECT'; name: 'Routing'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'routing': { name: 'routing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DaeRouting'; ofType: null; }; } }; 'selected': { name: 'selected'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'referenceGroups': { name: 'referenceGroups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DaeRouting': { kind: 'OBJECT'; name: 'DaeRouting'; fields: { 'string': { name: 'string'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rules': { name: 'rules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RoutingRule'; ofType: null; }; }; }; } }; 'fallback': { name: 'fallback'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'FunctionOrPlaintext'; ofType: null; }; } }; }; };
    'RoutingRule': { kind: 'OBJECT'; name: 'RoutingRule'; fields: { 'conditions': { name: 'conditions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AndFunctions'; ofType: null; }; } }; 'outbound': { name: 'outbound'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Function'; ofType: null; }; } }; }; };
    'Function': { kind: 'OBJECT'; name: 'Function'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'not': { name: 'not'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'params': { name: 'params'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Param'; ofType: null; }; }; }; } }; }; };
    'Param': { kind: 'OBJECT'; name: 'Param'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'val': { name: 'val'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AndFunctions': { kind: 'OBJECT'; name: 'AndFunctions'; fields: { 'and': { name: 'and'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Function'; ofType: null; }; }; }; } }; }; };
    'Plaintext': { kind: 'OBJECT'; name: 'Plaintext'; fields: { 'val': { name: 'val'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AndFunctionsOrPlaintext': { kind: 'UNION'; name: 'AndFunctionsOrPlaintext'; fields: {}; possibleTypes: 'AndFunctions' | 'Plaintext'; };
    'FunctionOrPlaintext': { kind: 'UNION'; name: 'FunctionOrPlaintext'; fields: {}; possibleTypes: 'Function' | 'Plaintext'; };
    'Dns': { kind: 'OBJECT'; name: 'Dns'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dns': { name: 'dns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DaeDns'; ofType: null; }; } }; 'selected': { name: 'selected'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DaeDns': { kind: 'OBJECT'; name: 'DaeDns'; fields: { 'string': { name: 'string'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'upstream': { name: 'upstream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Param'; ofType: null; }; }; }; } }; 'routing': { name: 'routing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DnsRouting'; ofType: null; }; } }; }; };
    'DnsRouting': { kind: 'OBJECT'; name: 'DnsRouting'; fields: { 'request': { name: 'request'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DaeRouting'; ofType: null; }; } }; 'response': { name: 'response'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DaeRouting'; ofType: null; }; } }; }; };
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'Node': { kind: 'OBJECT'; name: 'Node'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'link': { name: 'link'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'protocol': { name: 'protocol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tag': { name: 'tag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'subscriptionID': { name: 'subscriptionID'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'NodesConnection': { kind: 'OBJECT'; name: 'NodesConnection'; fields: { 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Node'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'Subscription': { kind: 'OBJECT'; name: 'Subscription'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'tag': { name: 'tag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'link': { name: 'link'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'info': { name: 'info'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NodesConnection'; ofType: null; }; } }; }; };
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'avatar': { name: 'avatar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
  };
};

import * as gqlTada from 'gql.tada'

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}
